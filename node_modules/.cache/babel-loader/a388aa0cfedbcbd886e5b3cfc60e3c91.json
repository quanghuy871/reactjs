{"ast":null,"code":"var _jsxFileName = \"/Users/huy/Documents/Learning/Reactjs/my-first-app/src/component/ExpenseList.js\";\nimport React from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseList = function (props) {\n  const expenseFilter = props.items.filter(el => el.date.getFullYear().toString() === filteredYear);\n  return expenseFilter.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error\",\n    children: \"There is no item\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 39\n  }, this) : expenseFilter.map(el => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n    title: el.title,\n    date: el.date,\n    amount: el.amount\n  }, el.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 34\n  }, this));\n};\n\n_c = ExpenseList;\nexport default ExpenseList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseList\");","map":{"version":3,"sources":["/Users/huy/Documents/Learning/Reactjs/my-first-app/src/component/ExpenseList.js"],"names":["React","ExpenseItem","ExpenseList","props","expenseFilter","items","filter","el","date","getFullYear","toString","filteredYear","length","map","title","amount","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,WAAW,GAAG,UAASC,KAAT,EAAgB;AAClC,QAAMC,aAAa,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAAE,IAAIA,EAAE,CAACC,IAAH,CAAQC,WAAR,GAAsBC,QAAtB,OAAqCC,YAA9D,CAAtB;AAEA,SAAOP,aAAa,CAACQ,MAAd,KAAyB,CAAzB,gBAA6B;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA7B,GACHR,aAAa,CAACS,GAAd,CAAmBN,EAAD,iBAAS,QAAC,WAAD;AAAyB,IAAA,KAAK,EAAEA,EAAE,CAACO,KAAnC;AAA0C,IAAA,IAAI,EAAEP,EAAE,CAACC,IAAnD;AAAyD,IAAA,MAAM,EAAED,EAAE,CAACQ;AAApE,KAAkBR,EAAE,CAACS,EAArB;AAAA;AAAA;AAAA;AAAA,UAA3B,CADJ;AAGD,CAND;;KAAMd,W;AAQN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport ExpenseItem from './ExpenseItem';\n\nconst ExpenseList = function(props) {\n  const expenseFilter = props.items.filter(el => el.date.getFullYear().toString() === filteredYear);\n\n  return expenseFilter.length === 0 ? <p className=\"error\">There is no item</p> :\n      expenseFilter.map((el) => (<ExpenseItem key={el.id} title={el.title} date={el.date} amount={el.amount}/>));\n\n};\n\nexport default ExpenseList;"]},"metadata":{},"sourceType":"module"}