{"ast":null,"code":"var _jsxFileName = \"/Users/huy/Documents/Learning/Reactjs/my-first-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Expense from './component/Expense.js';\nimport NewExpense from './component/NewExpense/NewExpense.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_EXPENSE = [{\n  id: 'e1',\n  title: 'A4 Paper',\n  amount: 94.12,\n  date: new Date(2020, 7, 14)\n}, {\n  id: 'e2',\n  title: 'New TV',\n  amount: 799.49,\n  date: new Date(2021, 2, 12)\n}, {\n  id: 'e3',\n  title: 'Car Insurance',\n  amount: 294.67,\n  date: new Date(2021, 2, 28)\n}, {\n  id: 'e4',\n  title: 'New Desk (Wooden)',\n  amount: 450,\n  date: new Date(2021, 5, 12)\n}];\n\nfunction App() {\n  _s();\n\n  const [expenses, setExpense] = useState(DUMMY_EXPENSE);\n\n  const addExpense = expenseData => {\n    setExpense(prevExpense => {\n      return [expenseData, ...prevExpense];\n    });\n    console.log(expenses);\n  };\n\n  const yearChange = year => {\n    const expensesCopy = expenses.slice().filter(el => el.date.getFullYear() === year);\n    setExpense(prevExpense => {\n      return expensesCopy;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: addExpense\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Expense, {\n      items: expenses,\n      onYearChange: yearChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"LorMYiKJ6vnPFhsQZlTyhaYWiPA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/huy/Documents/Learning/Reactjs/my-first-app/src/App.js"],"names":["React","useState","Expense","NewExpense","DUMMY_EXPENSE","id","title","amount","date","Date","App","expenses","setExpense","addExpense","expenseData","prevExpense","console","log","yearChange","year","expensesCopy","slice","filter","el","getFullYear"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,UAAP,MAAuB,sCAAvB;;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,UAFT;AAGEC,EAAAA,MAAM,EAAE,KAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CADoB,EAOpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,MAAM,EAAE,MAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CAPoB,EAapB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,MAAM,EAAE,MAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CAboB,EAmBpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,mBAFT;AAGEC,EAAAA,MAAM,EAAE,GAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CAnBoB,CAAtB;;AA2BA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBX,QAAQ,CAACG,aAAD,CAAvC;;AAEA,QAAMS,UAAU,GAAIC,WAAD,IAAiB;AAClCF,IAAAA,UAAU,CAAEG,WAAD,IAAiB;AAC1B,aAAO,CAACD,WAAD,EAAc,GAAGC,WAAjB,CAAP;AACD,KAFS,CAAV;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACD,GALD;;AAOA,QAAMO,UAAU,GAAIC,IAAD,IAAU;AAC3B,UAAMC,YAAY,GAAGT,QAAQ,CAACU,KAAT,GAAiBC,MAAjB,CAAwBC,EAAE,IAAIA,EAAE,CAACf,IAAH,CAAQgB,WAAR,OAA0BL,IAAxD,CAArB;AACAP,IAAAA,UAAU,CAAEG,WAAD,IAAiB;AAC1B,aAAOK,YAAP;AACD,KAFS,CAAV;AAGD,GALD;;AAOA,sBACI;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,YAAY,EAAEP;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEF,QAAhB;AAA0B,MAAA,YAAY,EAAEO;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMD;;GAvBQR,G;;KAAAA,G;AAyBT,eAAeA,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport Expense from './component/Expense.js';\nimport NewExpense from './component/NewExpense/NewExpense.js';\n\nconst DUMMY_EXPENSE = [\n  {\n    id: 'e1',\n    title: 'A4 Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: 'e2',\n    title: 'New TV',\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpense] = useState(DUMMY_EXPENSE);\n\n  const addExpense = (expenseData) => {\n    setExpense((prevExpense) => {\n      return [expenseData, ...prevExpense];\n    });\n    console.log(expenses);\n  };\n\n  const yearChange = (year) => {\n    const expensesCopy = expenses.slice().filter(el => el.date.getFullYear() === year);\n    setExpense((prevExpense) => {\n      return expensesCopy;\n    });\n  };\n\n  return (\n      <div>\n        <NewExpense onAddExpense={addExpense}/>\n        <Expense items={expenses} onYearChange={yearChange}/>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}